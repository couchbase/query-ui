/*
 * This is an automotically generated Antlr4 N1QL parser.
 *
 * Actually, the lexer part is hand-generated, and the parser rules are extracted
 * using an Antlr4 parser that parses the rules from the goyacc n1ql.y file.
 */

grammar n1ql;

fragment SingleStringCharacter:   '\'\'' | '\\\'' | '\\' ~['] | ~['\r\n\\];
fragment DoubleStringCharacter:   '\\"'  | '\\' ~["] | ~["\\];

STR:           '\'' SingleStringCharacter* '\''
|              '"' DoubleStringCharacter* '"';

fragment NumStart: '0' | [1-9];
fragment Digit:    [0-9];

fragment Int:      '0' | NumStart Digit*;
fragment Exponent: [eE][+-]? Digit+;

INT:           Int;

NUM:           Int '.' Digit+ Exponent? | Int Exponent;
BLOCK_COMMENT: '/*' .*? '*/';

LINE_COMMENT:  '--' ~[\n\r]*;
WHITESPACE:    [ \t\n\r\f\u00a0]+ -> skip;
DOT:           '.';
PLUS:          '+';
MINUS:         '-' | [mM][iI][nN][uU][sS];
STAR:          '*';
DIV:           '/';
MOD:           '%';
DEQ:           '==';
EQ:            '=';
NE:            '!=' | '<>';
LT:            '<';
LE:            '<=';
GT:            '>';
GE:            '>=';
CONCAT:        '||';
LPAREN:        '(';
RPAREN:        ')';
LBRACE:        '{';
RBRACE:        '}';
COMMA:         ',';
COLON:         ':';
LBRACKET:      '[';
RBRACKET:      ']';
RBRACKET_ICASE:']i';
SEMI:          ';';
NOT_A_TOKEN:   '!';

NAMESPACE_ID: [dD][eE][fF][aA][uU][lL][tT];

ADVISE:       [aA][dD][vV][iI][sS][eE];
ALL:          [aA][lL][lL];
ALTER:        [aA][lL][tT][eE][rR];
ANALYZE:      [aA][nN][aA][lL][yY][zZ][eE];
AND:          [aA][nN][dD];
ANY:          [aA][nN][yY];
ARRAY:        [aA][rR][rR][aA][yY];
AS:           [aA][sS];
ASC:          [aA][sS][cC];
AT:           [aA][tT];
BEGIN:        [bB][eE][gG][iI][nN];
BETWEEN:      [bB][eE][tT][wW][eE][eE][nN];
BINARY:       [bB][iI][nN][aA][rR][yY];
BOOLEAN:      [bB][oO][oO][lL][eE][aA][nN];
BREAK:        [bB][rR][eE][aA][kK];
BUCKET:       [bB][uU][cC][kK][eE][tT];
BUILD:        [bB][uU][iI][lL][dD];
BY:           [bB][yY];
CALL:         [cC][aA][lL][lL];
CASE:         [cC][aA][sS][eE];
CAST:         [cC][aA][sS][tT];
CLUSTER:      [cC][lL][uU][sS][tT][eE][rR];
COLLATE:      [cC][oO][lL][lL][aA][tT][eE];
COLLECTION:   [cC][oO][lL][lL][eE][cC][tT][iI][oO][nN];
COMMIT:       [cC][oO][mM][mM][iI][tT];
COMMITTED:    [cC][oO][mM][mM][iI][tT][tT][eE][dD];
CONNECT:      [cC][oO][nN][nN][eE][cC][tT];
CONTINUE:     [cC][oO][nN][tT][iI][nN][uU][eE];
CORRELATED:   [cC][oO][rR][rR][eE][lL][aA][tT][eE][dD];
COVER:        [cC][oO][vV][eE][rR];
CREATE:       [cC][rR][eE][aA][tT][eE];
CURRENT:      [cC][uU][rR][rR][eE][nN][tT];
DATABASE:     [dD][aA][tT][aA][bB][aA][sS][eE];
DATASET:      [dD][aA][tT][aA][sS][eE][tT];
DATASTORE:    [dD][aA][tT][aA][sS][tT][oO][rR][eE];
DECLARE:      [dD][eE][cC][lL][aA][rR][eE];
DECREMENT:    [dD][eE][cC][rR][eE][mM][eE][nN][tT];
DELETE_:      [dD][eE][lL][eE][tT][eE];
DERIVED:      [dD][eE][rR][iI][vV][eE][dD];
DESC:         [dD][eE][sS][cC];
DESCRIBE:     [dD][eE][sS][cC][rR][iI][bB][eE];
DISTINCT:     [dD][iI][sS][tT][iI][nN][cC][tT];
DO:           [dD][oO];
DROP:         [dD][rR][oO][pP];
EACH:         [eE][aA][cC][hH];
ELEMENT:      [eE][lL][eE][mM][eE][nN][tT];
ELSE:         [eE][lL][sS][eE];
END:          [eE][nN][dD];
EVERY:        [eE][vV][eE][rR][yY];
EXCEPT:       [eE][xX][cC][eE][pP][tT];
EXCLUDE:      [eE][xX][cC][lL][uU][dD][eE];
EXECUTE:      [eE][xX][eE][cC][uU][tT][eE];
EXISTS:       [eE][xX][iI][sS][tT][sS];
EXPLAIN:      [eE][xX][pP][lL][aA][iI][nN];
FALSE:        [fF][aA][lL][sS][eE];
FETCH:        [fF][eE][tT][cC][hH];
FILTER:       [fF][iI][lL][tT][eE][rR];
FIRST:        [fF][iI][rR][sS][tT];
FLATTEN:      [fF][lL][aA][tT][tT][eE][nN];
FLUSH:        [fF][lL][uU][sS][hH];
FOLLOWING:    [fF][oO][lL][lL][oO][wW][iI][nN][gG];
FOR:          [fF][oO][rR];
FORCE:        [fF][oO][rR][cC][eE];
FROM:         [fF][rR][oO][mM];
FTS:          [fF][tT][sS];
FUNCTION:     [fF][uU][nN][cC][tT][iI][oO][nN];
GOLANG:       [gG][oO][lL][aA][nN][gG];
GRANT:        [gG][rR][aA][nN][tT];
GROUP:        [gG][rR][oO][uU][pP];
GROUPS:       [gG][rR][oO][uU][pP][sS];
GSI:          [gG][sS][iI];
HASH:         [hH][aA][sS][hH];
HAVING:       [hH][aA][vV][iI][nN][gG];
IF:           [iI][fF];
IGNORE:       [iI][gG][nN][oO][rR][eE];
ILIKE:        [iI][lL][iI][kK][eE];
IN:           [iI][nN];
INCLUDE:      [iI][nN][cC][lL][uU][dD][eE];
INCREMENT:    [iI][nN][cC][rR][eE][mM][eE][nN][tT];
INDEX:        [iI][nN][dD][eE][xX];
INFER:        [iI][nN][fF][eE][rR];
INLINE:       [iI][nN][lL][iI][nN][eE];
INNER:        [iI][nN][nN][eE][rR];
INSERT:       [iI][nN][sS][eE][rR][tT];
INTERSECT:    [iI][nN][tT][eE][rR][sS][eE][cC][tT];
INTO:         [iI][nN][tT][oO];
IS:           [iI][sS];
ISOLATION:    [iI][sS][oO][lL][aA][tT][iI][oO][nN];
JAVASCRIPT:   [jJ][aA][vV][aA][sS][cC][rR][iI][pP][tT];
JOIN:         [jJ][oO][iI][nN];
KEY:          [kK][eE][yY];
KEYS:         [kK][eE][yY][sS];
KEYSPACE:     [kK][eE][yY][sS][pP][aA][cC][eE];
KNOWN:        [kK][nN][oO][wW][nN];
LANGUAGE:     [lL][aA][nN][gG][uU][aA][gG][eE];
LAST:         [lL][aA][sS][tT];
LEFT:         [lL][eE][fF][tT];
LET_:          [lL][eE][tT];
LETTING:      [lL][eE][tT][tT][iI][nN][gG];
LEVEL:        [lL][eE][vV][eE][lL];
LIKE:         [lL][iI][kK][eE];
LIMIT:        [lL][iI][mM][iI][tT];
LSM:          [lL][sS][mM];
MAP:          [mM][aA][pP];
MAPPING:      [mM][aA][pP][pP][iI][nN][gG];
MATCHED:      [mM][aA][tT][cC][hH][eE][dD];
MATERIALIZED: [mM][aA][tT][eE][rR][iI][aA][lL][iI][zZ][eE][dD];
MERGE:        [mM][eE][rR][gG][eE];
MISSING:      [mM][iI][sS][sS][iI][nN][gG];
NAMESPACE:    [nN][aA][mM][eE][sS][pP][aA][cC][eE];
NEST:         [nN][eE][sS][tT];
NL:           [nN][lL];
NO:           [nN][oO];
NOT:          [nN][oO][tT];
NTH_VALUE:    [nN][tT][hH][_][vV][aA][lL][uU][eE];
NULL:         [nN][uU][lL][lL];
NULLS:        [nN][uU][lL][lL][sS];
NUMBER:       [nN][uN][mM][bB][eE][rR];
OBJECT:       [oO][bB][jJ][eE][cC][tT];
OFFSET:       [oO][fF][fF][sS][eE][tT];
ON:           [oO][nN];
OPTION:       [oO][pP][tT][iI][oO][nN];
OPTIONS:      [oO][pP][tT][iI][oO][nN][sS];
OR:           [oO][rR];
ORDER:        [oO][rR][dD][eE][rR];
OTHERS:       [oO][tT][hH][eE][rR][sS];
OUTER:        [oO][uU][tT][eE][rR];
OVER:         [oO][vV][eE][rR];
PARSE:        [pP][aA][rR][sS][eE];
PARTITION:    [pP][aA][rR][tT][iI][tT][iI][oO][nN];
PASSWORD:     [pP][aA][sS][sS][wW][oO][rR][dD];
PATH:         [pP][aA][tT][hH];
POOL:         [pP][oO][oO][lL];
PRECEDING:    [pP][rR][eE][cC][eE][dD][iI][nN][gG];
PREPARE:      [pP][rR][eE][pP][aA][rR][eE];
PRIMARY:      [pP][rR][iI][mM][aA][rR][yY];
PRIVATE:      [pP][rR][iI][vV][aA][tT][eE];
PRIVILEGE:    [pP][rR][iI][vV][iI][lL][eE][gG][eE];
PROCEDURE:    [pP][rR][oO][cC][eE][dD][uU][rR][eE];
PROBE:        [pP][rR][oO][bB][eE];
PUBLIC:       [pP][uU][bB][lL][iI][cC];
RANGE:        [rR][aA][nN][gG][eE];
RAW:          [rR][aA][wW];
READ:         [rR][eE][aA][dD];
REALM:        [rR][eE][aA][lL][mM];
REDUCE:       [rR][eE][dD][uU][cC][eE];
RENAME:       [rR][eE][nN][aA][mM][eE];
REPLACE:      [rR][eE][pP][lL][aA][cC][eE];
RESPECT:      [rR][eE][sS][pP][eE][cC][tT];
RETURN:       [rR][eE][tT][uU][rR][nN];
RETURNING:    [rR][eE][tT][uU][rR][nN][iI][nN][gG];
REVOKE:       [rR][eE][vV][oO][kK][eE];
RIGHT:        [rR][iI][gG][hH][tT];
ROLE:         [rR][oO][lL][eE];
ROLLBACK:     [rR][oO][lL][lL][bB][aA][cC][kK];
ROW:          [rR][oO][wW];
ROWS:         [rR][oO][wW][sS];
SATISFIES:    [sS][aA][tT][iI][sS][fF][iI][eE][sS];
SAVEPOINT:    [sS][aA][vV][eE][pP][oO][iI][nN][tT];
SCHEMA:       [sS][cC][hH][eE][mM][aA];
SCOPE:        [sS][cC][oO][pP][eE];
SELECT:       [sS][eE][lL][eE][cC][tT];
SELF:         [sS][eE][lL][fF];
SET:          [sS][eE][tT];
SHOW:         [sS][hH][oO][wW];
SOME:         [sS][oO][mM][eE];
START:        [sS][tT][aA][rR][tT];
STATISTICS:   [sS][tT][aA][tT][iI][sS][tT][iI][cC][sS];
STRING:       [sS][tT][rR][iI][nN][gG];
SYSTEM:       [sS][yY][sS][tT][eE][mM];
THEN:         [tT][hH][eE][nN];
TIES:         [tT][iI][eE][sS];
TO:           [tT][oO];
TRAN:         [tT][rR][aA][nN];
TRANSACTION:  [tT][rR][aA][nN][sS][aA][cC][tT][iI][oO][nN];
TRIGGER:      [tT][rR][iI][gG][gG][eE][rR];
TRUE:         [tT][rR][uU][eE];
TRUNCATE:     [tT][rR][uU][nN][cC][aA][tT][eE];
UNBOUNDED:    [uU][nN][bB][oO][uU][nN][dD][eE][dD];
UNDER:        [uU][nN][dD][eE][rR];
UNION:        [uU][nN][iI][oO][nN];
UNIQUE:       [uU][nN][iI][qQ][uU][eE];
UNKNOWN:      [uU][nN][kK][nN][oO][wW][nN];
UNNEST:       [uU][nN][nN][eE][sS][tT];
UNSET:        [uU][nN][sS][eE][tT];
UPDATE:       [uU][pP][dD][aA][tT][eE];
UPSERT:       [uU][pP][sS][eE][rR][tT];
USE:          [uU][sS][eE];
USER:         [uU][sS][eE][rR];
USING:        [uU][sS][iI][nN][gG];
VALIDATE:     [vV][aA][lL][iI][dD][aA][tT][eE];
VALUE:        [vV][aA][lL][uU][eE];
VALUED:       [vV][aA][lL][uU][eE][dD];
VALUES:       [vV][aA][lL][uU][eE][sS];
VIA:          [vV][iI][aA];
VIEW:         [vV][iI][eE][wW];
WHEN:         [wW][hH][eE][nN];
WHERE:        [wW][hH][eE][rR][eE];
WHILE:        [wW][hH][iI][lL][eE];
WINDOW:       [wW][iI][nN][dD][oO][wW];
WITH:         [wW][iI][tT][hH];
WITHIN:       [wW][iI][tT][hH][iI][nN];
WORK:         [wW][oO][rR][kK];
XOR:          [xX][oO][rR];

fragment IdentChar:      '``' | ~[`];
fragment IdentFirstChar: [a-zA-Z_];
fragment IdentLaterChar: [a-zA-Z0-9_];

IDENT_ICASE:   '`' IdentChar+ '`i';
IDENT:         '`' IdentChar+ '`' | IdentFirstChar IdentLaterChar*;
NAMED_PARAM:  '$' IdentFirstChar IdentLaterChar*;
POSITIONAL_PARAM: '$' [1-9] [0-9]*;
NEXT_PARAM:    '?';
